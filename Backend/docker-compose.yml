version: '3.8'

services:

  ollama-llm:
    image: ollama/ollama:latest
    volumes:
      - ollama_data:/root/.ollama
    ports:
      - "11434:11434"

  prepare-models:
    image: ollama/ollama:latest
    depends_on:
      - ollama-llm
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=http://ollama-llm:11434
    entrypoint: >
      sh -c "
      echo 'Waiting for Ollama server to start...' &&
      sleep 10 &&
      echo 'Pulling llama3.2...' &&
      ollama pull llama3.2 &&
      echo 'Pulling embedding model...' &&
      ollama pull nomic-embed-text &&
      echo 'Model preparation complete.'"

  db:
    image: pgvector/pgvector:pg16
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_DB=postgres-docker
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    labels:
      - org.springframework.boot.service-connection=postgres
    volumes:
      - pgvector_data:/var/lib/postgresql/data

  backend-spring-ai:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "5005:5005"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres-docker
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_AI_OLLAMA_BASE_URL=http://ollama-llm:11434/
      - SPRING_AI_OLLAMA_CHAT_OPTIONS_MODEL=llama3.2
      - SPRING_AI_OLLAMA_EMBEDDING_OPTIONS_MODEL=nomic-embed-text
      - SPRING_AI_VECTORSTORE_PGVECTOR_INDEX_TYPE=HNSW
      - SPRING_AI_VECTORSTORE_PGVECTOR_DISTANCE_TYPE=COSINE_DISTANCE
      - SPRING_AI_VECTORSTORE_PGVECTOR_DIMENSIONS=768
      - SPRING_PROFILES_ACTIVE=docker
      - API_SECURITY_TOKEN_SECRET=my-secret-key
      - API_SECURITY_TOKEN_EXPIRATION_HOURS=2
      - FILE_PATH=/app/data
    command: ["java", "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005", "-jar", "spring-ai-llama.jar"]
    volumes:
      - ollama_data:/root/.ollama
      - data:/app/data
    depends_on:
      - prepare-models
      - db
      - ollama-llm

volumes:
  pgvector_data:
  ollama_data:
  data: